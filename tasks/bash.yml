- name: Look for bash
  shell: which bash
  register: found_bash
  ignore_errors: yes

# set `bash_config` based on user, OS, etc
- include_tasks: bash-set-config.yml
  vars:
    found_bash: "{{found_bash}}"

- include_tasks: bash-osx.yml
  when: ansible_os_family=="Darwin"
  vars:
    found_bash: "{{found_bash}}"

- name: Create bash-config if not present
  become: no
  file:
    path: "{{bash_config}}"
    state: touch

- name: Add init block to bash config
  blockinfile:
    path: "{{bash_config}}"
    marker: "# {mark}  agent.bash.init {{item|default('')}}"
    block: "{{bash.init}}"
    create: yes

- name: "Setup $PATH"
  become: no
  when: found_bash|succeeded
  blockinfile:
    marker: "# {mark}  agent.bash.path"
    path: "{{bash_config}}"
    block: "PATH=$PATH:{{PATH_extras|default('~/bin')}}"
    state: present

- name: "Setup agent bash-aliases (common)"
  become: no
  when: found_bash is succeeded
  lineinfile:
    path: "{{bash_config}}"
    line: "alias {{item}}"
    regexp: "alias {{item}}"
  with_items: "{{bash.aliases}}"

- name: "Setup agent bash-aliases (darwin)"
  become: no
  when: found_bash is succeeded and ansible_os_family=="Darwin"
  lineinfile:
    path: "{{bash_config}}"
    line: "alias {{item}}"
    regexp: "alias {{item}}"
  with_items: "{{bash.aliases_darwin}}"

- name: "Setup agent bash-aliases (non-darwin)"
  become: no
  when: ansible_os_family!="Darwin" and found_bash|succeeded
  lineinfile:
    path: "{{bash_config}}"
    line: "alias {{item}}"
    regexp: "alias {{item}}"
  with_items: "{{bash.aliases_nondarwin}}"

- name: Setup agent bash-functions
  become: no
  when: found_bash|succeeded
  blockinfile:
    marker: "# {mark} agent.bash.functions `{{item.key}}`"
    path: "{{bash_config}}"
    block: |
      function {{item.key}}(){
        {{item.value}}
      }
  with_dict: "{{bash.functions}}"

- name: Concatenate the bash-env
  set_fact:
    env_block: "{{ bash.env | join('\n') }}"

- name: Setup agent bash-env
  become: no
  when: found_bash is succeeded
  blockinfile:
    path: "{{bash_config}}"
    block: "{{env_block}}"
    marker: "# {mark} agent.bash.env"
